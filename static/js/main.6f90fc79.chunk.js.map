{"version":3,"sources":["utils/days.utils.js","redux/holidays/holidays.reducer.js","redux/store/actions/actionTypes.js","redux/days/days.reducer.js","redux/root-reducer.js","redux/store/store.js","axios-holidays.js","config.js","redux/store/actions/holidays.js","redux/store/actions/days.js","components/calendar-holiday/holiday.component.jsx","components/holiday-card/holidayCard.component.jsx","components/calendar-day/day.component.jsx","components/calendar-week/calendarWeek.component.jsx","components/calendar/calendar.component.jsx","components/first-day-selector/firstDaySelector.component.jsx","components/configuration-dialog/configurationDialog.component.jsx","components/configuration-button/configurationButton.component.jsx","components/calendar-appbar/calendarAppbar.component.jsx","pages/homepage/homepage.component.jsx","App.js","serviceWorker.js","index.js"],"names":["holidaysByDate","date","holidays","filter","holiday","retrieveEndYear","startDate","daysToDisplay","moment","add","format","addDays","daysToAdd","retrieveEndDate","today","INITIAL_STATE","dates","endDate","fetchHolidaysStart","state","action","loading","fetchHolidaysSuccess","payload","fetchHolidaysFailed","setHolidaysStartDate","setHolidaysEndDate","holidaysReducer","type","firstDayOfTheWeek","daysReducer","rootReducer","combineReducers","days","middlewares","logger","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","instance","axios","create","baseURL","fetchHolidays","insertBefore","dispatch","requestHeaders","apiKey","post","then","res","fetchedHolidays","data","error","namesList","reduce","filtered","includes","name","push","filterRepeated","Object","keys","forEach","key","day","assign","buildHolidays","catch","setFirstDayOfTheWeek","firstDay","Holiday","className","Chip","variant","color","size","icon","label","useStyles","makeStyles","theme","root","display","overflow","width","details","flexDirection","content","flex","padding","cover","controls","alignItems","margin","paddingBottom","spacing","HolidayCard","classes","Card","CardContent","Typography","Day","month","dayOfTheWeek","isHoliday","map","breakpoints","currentBreakpoint","mobileLandscape","connect","checkHoliday","dayOfTheMonth","setStartDate","startYear","endYear","calendarClass","Tooltip","title","IconButton","onClick","options","setFirstDay","dateToFormat","React","useState","anchorEl","setAnchorEl","currentDay","handleChange","value","handleClose","dayOfTheWeekAsNumber","Math","abs","newFirstDay","ListItem","button","divider","aria-haspopup","aria-controls","aria-label","event","currentTarget","role","ListItemText","primary","secondary","Menu","id","keepMounted","open","Boolean","onClose","option","index","MenuItem","position","top","left","paper","maxHeight","ConfigurationDialog","isOpen","Dialog","List","component","disabled","menuButton","marginRight","backgroundColor","ConfigurationButton","setOpen","handleClick","edge","flexGrow","CalendarAppBar","AppBar","Toolbar","getHolidays","fetchHolidaysEnd","holidaysStartDate","freeze","setDays","setStartYear","setEndYear","holidaysEndDate","useEffect","numDays","firstDate","lastDate","currentDate","newDay","createDays","retrieveStartYear","App","path","location","hostname","match","ReactDOM","render","StrictMode","mobile","tablet","tabletLandscape","desktop","desktopLarge","desktopWide","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.6f90fc79.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst DATE_FORMAT = \"YYYY-MM-DD\";\nconst WEEK_FORMAT = \"dddd\";\nconst YEAR_FORMAT = \"YYYY\";\n\nexport const createDays = (startDate, numDays) => {\n  const days = [];\n  const firstDate = moment(startDate);\n  const lastDate = moment(firstDate).add(numDays - 1, \"days\");\n  let currentDate = firstDate;\n  while (currentDate <= lastDate) {\n    const newDay = {\n      date: moment(currentDate).format(DATE_FORMAT),\n      dayOfTheMonth: moment(currentDate).date(),\n      dayOfTheWeek: moment(currentDate).format(\"ddd\"),\n      month: moment(currentDate).format(\"MMM\"),\n    };\n    days.push(newDay);\n    currentDate = moment(currentDate).add(1, \"days\");\n  }\n  return days;\n};\n\nexport const buildHolidays = (data) => {\n  const fetchedHolidays = [];\n  Object.keys(data).forEach((key) => {\n    for (let day of data[key]) {\n      fetchedHolidays.push(Object.assign(day, { date: key }));\n    }\n  });\n  return fetchedHolidays;\n};\n\nexport const filterRepeated = (holidays) => {\n  const namesList = [];\n  return holidays.reduce((filtered, holiday) => {\n    if (!namesList.includes(holiday.name)) {\n      namesList.push(holiday.name);\n      filtered.push(holiday);\n    }\n    return filtered;\n  }, []);\n};\n\nexport const checkHoliday = (day, holidays) => {\n  const holidaysDates = holidays.map((holiday) => holiday.date);\n  return holidaysDates.includes(day.date);\n};\n\nexport const holidaysByDate = (date, holidays) => {\n  return holidays.filter((holiday) => holiday.date === date);\n};\n\nexport const retrieveStartYear = (startDate) => {\n  return moment(startDate).format(\"YYYY\");\n};\n\nexport const retrieveEndYear = (startDate, daysToDisplay) => {\n  return moment(startDate).add(daysToDisplay, \"days\").format(\"YYYY\");\n};\n\nexport const addDays = (startDate, daysToAdd) => {\n  return moment(startDate).add(daysToAdd, \"days\").format(DATE_FORMAT);\n};\n\nexport const retrieveEndDate = addDays;\n\nexport const today = () => moment().format(DATE_FORMAT);\nexport const currentYear = () => moment().format(YEAR_FORMAT);\n\nexport const dayOfTheWeekAsString = (dateToFormat) => {\n  return moment(dateToFormat).format(WEEK_FORMAT);\n};\n\nexport const dayOfTheWeekAsNumber = (dateToFormat) => {\n  return moment(dateToFormat).format(\"E\");\n};\n","import * as actionTypes from \"../store/actions/actionTypes\";\nimport { retrieveEndDate, today } from \"../../utils/days.utils\";\n\nconst INITIAL_STATE = {\n  dates: [],\n  startDate: today(),\n  endDate: retrieveEndDate(today()),\n};\n\nconst fetchHolidaysStart = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nconst fetchHolidaysSuccess = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n    dates: action.payload,\n  };\n};\n\nconst fetchHolidaysFailed = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n  };\n};\n\nconst setHolidaysStartDate = (state, action) => {\n  return {\n    ...state,\n    startDate: action.payload,\n  };\n};\n\nconst setHolidaysEndDate = (state, action) => {\n  return {\n    ...state,\n    endDate: action.payload,\n  };\n};\n\nconst holidaysReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_HOLIDAYS_START:\n      return fetchHolidaysStart(state, action);\n\n    case actionTypes.FETCH_HOLIDAYS_SUCCESS:\n      return fetchHolidaysSuccess(state, action);\n\n    case actionTypes.FETCH_HOLIDAYS_FAILED:\n      return fetchHolidaysFailed(state, action);\n\n    case actionTypes.SET_HOLIDAYS_START_DATE:\n      return setHolidaysStartDate(state, action);\n\n    case actionTypes.SET_HOLIDAYS_END_DATE:\n      return setHolidaysEndDate(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default holidaysReducer;\n","export const FETCH_HOLIDAYS_START = \"FETCH_HOLIDAYS_START\";\nexport const FETCH_HOLIDAYS_SUCCESS = \"FETCH_HOLIDAYS_SUCCESS\";\nexport const FETCH_HOLIDAYS_FAILED = \"FETCH_HOLIDAYS_FAILED\";\n\nexport const SET_DAYS = \"SET_DAYS\";\nexport const SET_HOLIDAYS_START_DATE = \"SET_HOLIDAYS_START_DATE\";\nexport const SET_HOLIDAYS_END_DATE = \"SET_HOLIDAYS_END_DATE\";\n\nexport const SET_FIRST_DAY_OF_THE_WEEK = \"SET_FIRST_DAY_OF_THE_WEEK\";\n","import * as actionTypes from \"../store/actions/actionTypes\";\nimport { today } from \"../../utils/days.utils\";\n\nconst INITIAL_STATE = {\n  dates: [],\n  firstDayOfTheWeek: today(),\n};\n\nconst daysReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SET_DAYS:\n      return {\n        ...state,\n        dates: action.payload,\n      };\n    case actionTypes.SET_FIRST_DAY_OF_THE_WEEK:\n      return {\n        ...state,\n        firstDayOfTheWeek: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default daysReducer;\n","import { combineReducers } from \"redux\";\nimport holidaysReducer from \"./holidays/holidays.reducer\";\nimport daysReducer from \"./days/days.reducer\";\n\nconst rootReducer = combineReducers({\n  holidays: holidaysReducer,\n  days: daysReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"../root-reducer\";\n\nconst middlewares = [logger, thunk];\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import axios from \"axios\";\nimport * as config from \"./config\";\n\nconst instance = axios.create({\n  baseURL: config.API_URL,\n});\n\nexport default instance;\n","export const API_URL = \"\";\nexport const API_KEY = \"\";\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../../axios-holidays\";\nimport * as config from \"../../../config\";\n\nimport { buildHolidays, filterRepeated } from \"../../../utils/days.utils\";\n\nconst fetchHolidaysStart = () => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_START,\n  };\n};\n\nconst fetchHolidaysSuccess = (fetchedHolidays) => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_SUCCESS,\n    payload: fetchedHolidays,\n  };\n};\n\nconst fetchHolidaysFailed = () => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_FAILED,\n  };\n};\n\nconst setHolidaysStartDate = (startDate) => {\n  return {\n    type: actionTypes.SET_HOLIDAYS_START_DATE,\n    payload: startDate,\n  };\n};\n\nconst setHolidaysEndDate = (endDate) => {\n  return {\n    type: actionTypes.SET_HOLIDAYS_END_DATE,\n    payload: endDate,\n  };\n};\n\nexport const fetchHolidays = (startDate, endDate, insertBefore, holidays) => {\n  return (dispatch) => {\n    dispatch(fetchHolidaysStart());\n    const requestHeaders = {\n      apiKey: config.API_KEY,\n      startDate: startDate,\n      endDate: endDate,\n    };\n    axios\n      .post(\"holidays\", requestHeaders)\n      .then((res) => {\n        let fetchedHolidays = [];\n        if (!res.data.error) {\n          fetchedHolidays = filterRepeated(buildHolidays(res.data.holidays));\n        }\n        fetchedHolidays = insertBefore\n          ? [...fetchedHolidays, ...holidays]\n          : [...holidays, ...fetchedHolidays];\n        dispatch(fetchHolidaysSuccess(fetchedHolidays));\n        insertBefore\n          ? dispatch(setHolidaysStartDate(startDate))\n          : dispatch(setHolidaysEndDate(endDate));\n      })\n      .catch((error) => {\n        dispatch(fetchHolidaysFailed(error));\n      });\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const setDays = (days) => {\n  return {\n    type: actionTypes.SET_DAYS,\n    payload: days,\n  };\n};\n\nexport const setFirstDayOfTheWeek = (firstDay) => {\n  return {\n    type: actionTypes.SET_FIRST_DAY_OF_THE_WEEK,\n    payload: firstDay,\n  };\n};\n","import React from \"react\";\nimport \"./holiday.styles.scss\";\n\nimport { Chip } from \"@material-ui/core\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nconst Holiday = ({ name, type }) => (\n  <div className=\"holiday\">\n    <div className=\"name\">{name}</div>\n    <Chip\n      variant=\"outlined\"\n      color=\"secondary\"\n      size=\"small\"\n      icon={<EventIcon />}\n      label={type}\n    />\n  </div>\n);\n\nexport default Holiday;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Chip } from \"@material-ui/core\";\n\nimport EventIcon from \"@material-ui/icons/Event\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    overflow: \"scroll\",\n    width: \"100%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n    padding: 10,\n    width: \"max-content\",\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nexport default function HolidayCard({ name, type }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {name}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <Chip\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            icon={<EventIcon />}\n            label={type}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./day.styles.scss\";\nimport Holiday from \"../calendar-holiday/holiday.component\";\nimport MobileHoliday from \"../holiday-card/holidayCard.component\";\nimport { Media } from \"react-breakpoints\";\n\nconst Day = ({ date, day, month, dayOfTheWeek, isHoliday, holidays }) => {\n  return (\n    <div className=\"day\">\n      <div className=\"date-wrapper\">\n        <div className=\"date\">\n          <span className=\"number\">{day}</span>\n          <span className=\"month\">{month}</span>\n        </div>\n        <div className={isHoliday ? \"day-week holiday\" : \"day-week\"}>\n          {dayOfTheWeek}\n        </div>\n      </div>\n      <div className=\"holidays\">\n        {isHoliday\n          ? holidays.map((holiday) => (\n              <Media key={holiday.name}>\n                {({ breakpoints, currentBreakpoint }) => {\n                  return breakpoints[currentBreakpoint] >\n                    breakpoints.mobileLandscape ? (\n                    <Holiday\n                      key={holiday.name}\n                      name={holiday.name}\n                      type={holiday.type}\n                    />\n                  ) : (\n                    <MobileHoliday\n                      key={holiday.name}\n                      name={holiday.name}\n                      type={holiday.type}\n                    />\n                  );\n                }}\n              </Media>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Day;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./calendarWeek.styles.scss\";\nimport Day from \"../calendar-day/day.component\";\n\nimport { checkHoliday, holidaysByDate } from \"../../utils/days.utils\";\n\nconst CalendarWeek = ({ days, holidays }) => {\n  return holidays.dates ? (\n    <div className=\"week\">\n      {days.dates.map((day) => {\n        const isHoliday = checkHoliday(day, holidays.dates);\n        return (\n          <Day\n            key={day.date}\n            date={day.date}\n            day={day.dayOfTheMonth}\n            month={day.month}\n            dayOfTheWeek={day.dayOfTheWeek}\n            isHoliday={isHoliday}\n            holidays={\n              isHoliday ? holidaysByDate(day.date, holidays.dates) : null\n            }\n          />\n        );\n      })}\n    </div>\n  ) : (\n    <h1>Something went wrong!</h1>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    holidays: state.holidays,\n    days: state.days,\n  };\n};\n\nexport default connect(mapStateToProps)(CalendarWeek);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport CalendarWeek from \"../calendar-week/calendarWeek.component\";\nimport { addDays } from \"../../utils/days.utils\";\n\nimport { setFirstDayOfTheWeek } from \"../../redux/store/actions/days\";\n\nimport \"./mobileCalendar.styles.scss\";\n\nconst Calendar = ({\n  startYear,\n  startDate,\n  setStartDate,\n  endYear,\n  calendarClass,\n}) => {\n  return (\n    <Fragment>\n      <div className=\"calendar-header\">\n        <div>{startYear}</div>\n        {startYear !== endYear ? <div>{endYear}</div> : null}\n      </div>\n      <div className={calendarClass}>\n        <Tooltip title=\"Previous Week\">\n          <IconButton\n            classes={{\n              root: \"next-icon\",\n            }}\n            onClick={() => setStartDate(addDays(startDate, -7))}\n          >\n            <NavigateBeforeIcon />\n          </IconButton>\n        </Tooltip>\n        <CalendarWeek />\n        <Tooltip title=\"Next Week\">\n          <IconButton\n            classes={{\n              root: \"next-icon\",\n            }}\n            onClick={() => setStartDate(addDays(startDate, 7))}\n          >\n            <NavigateNextIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    startDate: state.days.firstDayOfTheWeek,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setStartDate: (firstDay) => dispatch(setFirstDayOfTheWeek(firstDay)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport {\n  retrieveEndDate,\n  dayOfTheWeekAsString,\n  dayOfTheWeekAsNumber,\n} from \"../../utils/days.utils\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\n\nimport { setFirstDayOfTheWeek } from \"../../redux/store/actions/days\";\n\nconst options = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nconst FirstDaySelector = ({ firstDay, setFirstDay }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const currentDay = dayOfTheWeekAsString(firstDay);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleChange = (value) => {\n    handleClose();\n    const daysToAdd = value - dayOfTheWeekAsNumber(firstDay); // (0 ... 6) - currentDayOfTheWeek\n    if (Math.abs(daysToAdd) < 7) {\n      const newFirstDay = retrieveEndDate(firstDay, daysToAdd);\n      setFirstDay(newFirstDay);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <ListItem\n        button\n        divider\n        aria-haspopup=\"true\"\n        aria-controls=\"days-menu\"\n        aria-label=\"first-day\"\n        onClick={handleClick}\n        role=\"listitem\"\n      >\n        <ListItemText primary=\"First Day\" secondary={currentDay} />\n      </ListItem>\n      <Menu\n        id=\"days-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, index) => (\n          <MenuItem key={option} onClick={() => handleChange(index)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    firstDay: state.days.firstDayOfTheWeek,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFirstDay: (firstDay) => dispatch(setFirstDayOfTheWeek(firstDay)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FirstDaySelector);\n","import React from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { makeStyles, Dialog } from \"@material-ui/core\";\nimport FirstDaySelector from \"../first-day-selector/firstDaySelector.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    color: \"black\",\n    position: \"absolute\",\n    top: 54,\n    left: 0,\n  },\n  paper: {\n    width: \"70%\",\n    maxHeight: 435,\n  },\n}));\n\nconst ConfigurationDialog = ({ isOpen, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} classes={classes}>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Configure your Calendar\" />\n        </ListItem>\n        <FirstDaySelector />\n      </List>\n    </Dialog>\n  );\n};\n\nexport default ConfigurationDialog;\n","import React, { useState } from \"react\";\n\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport ConfigurationDialog from \"../configuration-dialog/configurationDialog.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n    backgroundColor: \"#276fa0\",\n  },\n}));\n\nconst ConfigurationButton = () => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  return (\n    <div>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={handleClick}\n      >\n        <EventIcon />\n      </IconButton>\n      <ConfigurationDialog isOpen={open} handleClose={handleClick} />\n    </div>\n  );\n};\n\nexport default ConfigurationButton;\n","import React from \"react\";\n\nimport { Typography, Toolbar, AppBar, makeStyles } from \"@material-ui/core\";\n\nimport ConfigurationButton from \"../configuration-button/configurationButton.component\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"darkslateblue\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst CalendarAppBar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.root}>\n        <ConfigurationButton />\n        <Typography variant=\"h6\" className={classes.title}>\n          My Calendar\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default CalendarAppBar;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./homepage.styles.scss\";\nimport { Media } from \"react-breakpoints\";\n\nimport { fetchHolidays } from \"../../redux/store/actions/holidays\";\nimport { setDays } from \"../../redux/store/actions/days\";\n\nimport {\n  createDays,\n  retrieveStartYear,\n  retrieveEndYear,\n  retrieveEndDate,\n  currentYear,\n  addDays,\n} from \"../../utils/days.utils\";\n\nimport Calendar from \"../../components/calendar/calendar.component\";\nimport CalendarAppBar from \"../../components/calendar-appbar/calendarAppbar.component\";\n\nconst HomePage = ({ setDays, holidays, getHolidays, startDate }) => {\n  const [daysToDisplay] = useState(7);\n\n  const [startYear, setStartYear] = useState(currentYear());\n  const [endYear, setEndYear] = useState(\n    retrieveEndYear(startDate, daysToDisplay)\n  );\n\n  const holidaysStartDate = holidays.startDate;\n  const holidaysEndDate = holidays.endDate;\n\n  useEffect(() => {\n    setDays(createDays(startDate, daysToDisplay));\n    setStartYear(retrieveStartYear(startDate));\n    setEndYear(retrieveEndYear(startDate, daysToDisplay));\n\n    if (startDate < holidaysStartDate) {\n      getHolidays(\n        addDays(holidaysStartDate, -28),\n        holidaysStartDate,\n        holidaysStartDate,\n        holidays.dates\n      );\n    } else if (retrieveEndDate(startDate, daysToDisplay) > holidaysEndDate) {\n      getHolidays(\n        addDays(holidaysEndDate, 1),\n        addDays(holidaysEndDate, 28),\n        holidaysStartDate,\n        holidays.dates\n      );\n    }\n  }, [\n    setDays,\n    setStartYear,\n    setEndYear,\n    getHolidays,\n    startDate,\n    daysToDisplay,\n  ]);\n\n  return (\n    <Fragment>\n      <CalendarAppBar />\n      <div className=\"homepage\">\n        <Media>\n          {({ breakpoints, currentBreakpoint }) => {\n            const calendarClass =\n              breakpoints[currentBreakpoint] > breakpoints.mobileLandscape\n                ? \"calendar\"\n                : \"mobile-calendar\";\n            return (\n              <Calendar\n                startYear={startYear}\n                endYear={endYear}\n                calendarClass={calendarClass}\n              />\n            );\n          }}\n        </Media>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    holidays: state.holidays,\n    days: state.days,\n    startDate: state.days.firstDayOfTheWeek,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getHolidays: (\n    fetchHolidaysStart,\n    fetchHolidaysEnd,\n    holidaysStartDate,\n    holidays\n  ) => {\n    const insertBefore = fetchHolidaysStart < holidaysStartDate;\n    dispatch(\n      fetchHolidays(\n        fetchHolidaysStart,\n        fetchHolidaysEnd,\n        insertBefore,\n        Object.freeze(holidays)\n      )\n    );\n  },\n  setDays: (days) => dispatch(setDays(days)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HomePage path=\"/week-calendar\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport ReactBreakpoints from \"react-breakpoints\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst breakpoints = {\n  mobile: 320,\n  mobileLandscape: 480,\n  tablet: 768,\n  tabletLandscape: 1024,\n  desktop: 1200,\n  desktopLarge: 1500,\n  desktopWide: 1920,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactBreakpoints breakpoints={breakpoints}>\n        <App />\n      </ReactBreakpoints>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}