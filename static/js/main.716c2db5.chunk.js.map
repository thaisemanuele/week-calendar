{"version":3,"sources":["utils/days.utils.js","redux/holidays/holidays.reducer.js","redux/store/actions/actionTypes.js","redux/days/days.reducer.js","redux/root-reducer.js","redux/store/store.js","axios-holidays.js","config.js","redux/store/actions/holidays.js","components/first-day-selector/firstDaySelector.component.jsx","components/calendar-holiday/holiday.component.jsx","components/calendar-day/day.component.jsx","components/calendar-week/calendarWeek.component.jsx","components/calendar/calendar.component.jsx","components/calendar-appbar/calendarAppbar.component.jsx","pages/homepage/homepage.component.jsx","redux/store/actions/days.js","App.js","serviceWorker.js","index.js"],"names":["holidaysByDate","date","holidays","filter","holiday","retrieveEndYear","startDate","daysToDisplay","moment","add","format","addDays","daysToAdd","retrieveEndDate","today","INITIAL_STATE","dates","endDate","fetchHolidaysStart","state","action","loading","fetchHolidaysSuccess","payload","fetchHolidaysFailed","setHolidaysStartDate","setHolidaysEndDate","holidaysReducer","type","daysReducer","rootReducer","combineReducers","days","middlewares","logger","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","instance","axios","create","baseURL","fetchHolidays","insertBefore","dispatch","requestHeaders","apiKey","post","then","res","fetchedHolidays","data","error","namesList","reduce","filtered","includes","name","push","filterRepeated","Object","keys","forEach","key","day","assign","buildHolidays","catch","FirstDaySelector","props","dateToFormat","React","useState","anchorEl","setAnchorEl","currentDay","firstDay","handleChange","value","handleClose","dayOfTheWeekAsNumber","console","log","Math","abs","newFirstDay","onFirstDayChanged","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Holiday","className","Chip","variant","color","size","icon","label","Day","month","dayOfTheWeek","isHoliday","map","connect","checkHoliday","dayOfTheMonth","Calendar","startYear","setStartDate","endYear","calendarClass","newFirstday","Tooltip","title","IconButton","classes","root","useStyles","makeStyles","theme","flexGrow","menuButton","marginRight","spacing","CalendarAppBar","AppBar","position","Toolbar","edge","aria-label","Typography","getHolidays","fetchHolidaysEnd","holidaysStartDate","freeze","setDays","setStartYear","setEndYear","holidaysEndDate","useEffect","numDays","firstDate","lastDate","currentDate","newDay","createDays","retrieveStartYear","breakpoints","currentBreakpoint","mobileLandscape","App","exact","path","location","hostname","match","ReactDOM","render","StrictMode","mobile","tablet","tabletLandscape","desktop","desktopLarge","desktopWide","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mUAkDaA,EAAiB,SAACC,EAAMC,GACnC,OAAOA,EAASC,QAAO,SAACC,GAAD,OAAaA,EAAQH,OAASA,MAO1CI,EAAkB,SAACC,EAAWC,GACzC,OAAOC,IAAOF,GAAWG,IAAIF,EAAe,QAAQG,OAAO,SAGhDC,EAAU,SAACL,EAAWM,GACjC,OAAOJ,IAAOF,GAAWG,IAAIG,EAAW,QAAQF,OA7D9B,eAgEPG,EAAkBF,EAElBG,EAAQ,kBAAMN,MAASE,OAlEhB,eCCdK,EAAgB,CACpBC,MAAO,GACPV,UAAWQ,IACXG,QAASJ,EAAgBC,MAGrBI,EAAqB,SAACC,EAAOC,GACjC,OAAO,2BACFD,GADL,IAEEE,SAAS,KAIPC,EAAuB,SAACH,EAAOC,GACnC,OAAO,2BACFD,GADL,IAEEE,SAAS,EACTL,MAAOI,EAAOG,WAIZC,EAAsB,SAACL,EAAOC,GAClC,OAAO,2BACFD,GADL,IAEEE,SAAS,KAIPI,EAAuB,SAACN,EAAOC,GACnC,OAAO,2BACFD,GADL,IAEEb,UAAWc,EAAOG,WAIhBG,EAAqB,SAACP,EAAOC,GACjC,OAAO,2BACFD,GADL,IAEEF,QAASG,EAAOG,WA0BLI,EAtBS,WAAoC,IAAnCR,EAAkC,uDAA1BJ,EAAeK,EAAW,uCACzD,OAAQA,EAAOQ,MACb,IC/CgC,uBDgD9B,OAAOV,EAAmBC,GAE5B,ICjDkC,yBDkDhC,OAAOG,EAAqBH,EAAOC,GAErC,ICnDiC,wBDoD/B,OAAOI,EAAoBL,GAE7B,ICnDmC,0BDoDjC,OAAOM,EAAqBN,EAAOC,GAErC,ICrDiC,wBDsD/B,OAAOM,EAAmBP,EAAOC,GAEnC,QACE,OAAOD,IE7DPJ,EAAgB,CACpBC,MAAO,IAgBMa,EAbK,WAAoC,IAAnCV,EAAkC,uDAA1BJ,EAAeK,EAAW,uCACrD,OAAQA,EAAOQ,MACb,IDJoB,WCKlB,OAAO,2BACFT,GADL,IAEEH,MAAOI,EAAOG,UAGlB,QACE,OAAOJ,ICNEW,EALKC,YAAgB,CAClC7B,SAAUyB,EACVK,KAAMH,ICCFI,EAAc,CAACC,IAAQC,KACvBC,EACc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCACPC,IAEOC,EAAQC,YACnBX,EACAM,EAAiBM,IAAe,WAAf,EAAmBT,K,yECRvBU,E,OAJEC,EAAMC,OAAO,CAC5BC,QCHA,gECsCWC,EAAgB,SAACzC,EAAWW,EAAS+B,EAAc9C,GAC9D,OAAO,SAAC+C,GACNA,EAlCK,CACLrB,KNRgC,yBM0ChC,IAAMsB,EAAiB,CACrBC,ODzCiB,mCC0CjB7C,UAAWA,EACXW,QAASA,GAEX2B,EACGQ,KAAK,WAAYF,GACjBG,MAAK,SAACC,GACL,IAAIC,EAAkB,GACjBD,EAAIE,KAAKC,QACZF,ERlBoB,SAACrD,GAC7B,IAAMwD,EAAY,GAClB,OAAOxD,EAASyD,QAAO,SAACC,EAAUxD,GAKhC,OAJKsD,EAAUG,SAASzD,EAAQ0D,QAC9BJ,EAAUK,KAAK3D,EAAQ0D,MACvBF,EAASG,KAAK3D,IAETwD,IACN,IQUuBI,CR5BC,SAACR,GAC5B,IAAMD,EAAkB,GAMxB,OALAU,OAAOC,KAAKV,GAAMW,SAAQ,SAACC,GAAS,IAAD,gBACjBZ,EAAKY,IADY,IACjC,2BAA2B,CAAC,IAAnBC,EAAkB,QACzBd,EAAgBQ,KAAKE,OAAOK,OAAOD,EAAK,CAAEpE,KAAMmE,MAFjB,kCAK5Bb,EQqBkCgB,CAAcjB,EAAIE,KAAKtD,YAE1DqD,EAAkBP,EAAY,sBACtBO,GADsB,YACFrD,IADE,sBAEtBA,GAFsB,YAETqD,IACrBN,EA7CqB,SAACM,GAC5B,MAAO,CACL3B,KNbkC,yBMclCL,QAASgC,GA0CIjC,CAAqBiC,IAE1BN,EADJD,EAjCqB,SAAC1C,GAC5B,MAAO,CACLsB,KNtBmC,0BMuBnCL,QAASjB,GA+BQmB,CAAqBnB,GA3Bf,SAACW,GAC1B,MAAO,CACLW,KN5BiC,wBM6BjCL,QAASN,GAyBQS,CAAmBT,OAEjCuD,OAAM,SAACf,GACNR,EA3CC,CACLrB,KNnBiC,+B,+EOStB,SAAS6C,EAAiBC,GAAQ,IT4DZC,ES5DW,EACdC,IAAMC,SAAS,MADD,mBACvCC,EADuC,KAC7BC,EAD6B,KAExCC,GT0D6BL,ES1DKD,EAAMO,ST2DvCzE,IAAOmE,GAAcjE,OArEV,SSgBZwE,EAAe,SAACC,GACpBC,IACA,IAAMxE,EAAYuE,ETsDc,SAACR,GACnC,OAAOnE,IAAOmE,GAAcjE,OAAO,KSvDP2E,CAAqBX,EAAMO,UAErD,GADAK,QAAQC,IAAI3E,GACR4E,KAAKC,IAAI7E,GAAa,EAAG,CAC3B,IAAM8E,EAAc7E,EAAgB6D,EAAMO,SAAUrE,GACpD0E,QAAQC,IAAIG,GACZhB,EAAMiB,kBAAkBD,KAItBN,EAAc,WAClBL,EAAY,OAGd,OACE,6BACE,kBAACa,EAAA,EAAD,CACEC,gBAAc,cACdC,gBAAc,OACdC,QAxBc,SAACC,GACnBjB,EAAYiB,EAAMC,iBAoBhB,cAKcjB,GAEd,kBAACkB,EAAA,EAAD,CACEC,GAAG,cACHrB,SAAUA,EACVsB,aAAW,EACXC,KAAMC,QAAQxB,GACdyB,QAASnB,GAET,kBAACoB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,UACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,WACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,aACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,YACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,UACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,YACA,kBAACsB,EAAA,EAAD,CAAUT,QAAS,kBAAMb,EAAa,KAAtC,Y,oDCrCOuB,GAbC,SAAC,GAAD,IAAG3C,EAAH,EAAGA,KAAYlC,GAAf,EAAS3B,KAAT,EAAe2B,MAAf,OACd,yBAAK8E,UAAU,WACb,yBAAKA,UAAU,QAAQ5C,GACvB,kBAAC6C,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLC,KAAM,kBAAC,KAAD,MACNC,MAAOpF,MCiBEqF,GA3BH,SAAC,GAA4D,EAA1DhH,KAA2D,IAArDoE,EAAoD,EAApDA,IAAK6C,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAWlH,EAAe,EAAfA,SACxD,OACE,yBAAKwG,UAAU,OACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,UAAUrC,GAC1B,0BAAMqC,UAAU,SAASQ,IAE3B,yBAAKR,UAAWU,EAAY,mBAAqB,YAC9CD,IAGL,yBAAKT,UAAU,YACZU,EACGlH,EAASmH,KAAI,SAACjH,GAAD,OACX,kBAAC,GAAD,CACEgE,IAAKhE,EAAQ0D,KACbA,KAAM1D,EAAQ0D,KACdlC,KAAMxB,EAAQwB,UAGlB,QCeG0F,gBAPS,SAACnG,GACvB,MAAO,CACLjB,SAAUiB,EAAMjB,SAChB8B,KAAMb,EAAMa,QAIDsF,EAhCM,SAAC,GAAwB,IAAtBtF,EAAqB,EAArBA,KAAM9B,EAAe,EAAfA,SAC5B,OAAOA,EAASc,MACd,yBAAK0F,UAAU,QACZ1E,EAAKhB,MAAMqG,KAAI,SAAChD,GACf,IAAM+C,EZiCc,SAAC/C,EAAKnE,GAEhC,OADsBA,EAASmH,KAAI,SAACjH,GAAD,OAAaA,EAAQH,QACnC4D,SAASQ,EAAIpE,MYnCVsH,CAAalD,EAAKnE,EAASc,OAC7C,OACE,kBAAC,GAAD,CACEoD,IAAKC,EAAIpE,KACTA,KAAMoE,EAAIpE,KACVoE,IAAKA,EAAImD,cACTN,MAAO7C,EAAI6C,MACXC,aAAc9C,EAAI8C,aAClBC,UAAWA,EACXlH,SACEkH,EAAYpH,EAAeqE,EAAIpE,KAAMC,EAASc,OAAS,WAOjE,wDC2BWyG,I,OA5CE,SAAC,GAMX,IALLC,EAKI,EALJA,UACApH,EAII,EAJJA,UACAqH,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,cAEA,OACE,kBAAC,WAAD,KACE,yBAAKnB,UAAU,mBACb,6BAAMgB,GACN,kBAACjD,EAAD,CACEQ,SAAU3E,EACVqF,kBAAmB,SAACmC,GAAD,OAAiBH,EAAaG,MAElDJ,IAAcE,EAAU,6BAAMA,GAAiB,MAElD,yBAAKlB,UAAWmB,GACd,kBAACE,EAAA,EAAD,CAASC,MAAM,iBACb,kBAACC,EAAA,EAAD,CACEC,QAAS,CACPC,KAAM,aAERpC,QAAS,kBAAM4B,EAAahH,EAAQL,GAAY,MAEhD,kBAAC,IAAD,QAGJ,kBAAC,GAAD,MACA,kBAACyH,EAAA,EAAD,CAASC,MAAM,aACb,kBAACC,EAAA,EAAD,CACEC,QAAS,CACPC,KAAM,aAERpC,QAAS,kBAAM4B,EAAahH,EAAQL,EAAW,MAE/C,kBAAC,IAAD,Y,wCCpCN8H,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCH,KAAM,CACJI,SAAU,GAEZC,WAAY,CACVC,YAAaH,EAAMI,QAAQ,IAE7BV,MAAO,CACLO,SAAU,OAyBCI,GArBQ,WACrB,IAAMT,EAAUE,KAChB,OACE,kBAACQ,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CACEc,KAAK,QACLrC,UAAWwB,EAAQM,WACnB3B,MAAM,UACNmC,aAAW,QAEX,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAYrC,QAAQ,KAAKF,UAAWwB,EAAQF,OAA5C,kBCgFOV,gBA3BS,SAACnG,GACvB,MAAO,CACLjB,SAAUiB,EAAMjB,SAChB8B,KAAMb,EAAMa,SAIW,SAACiB,GAAD,MAAe,CACxCiG,YAAa,SACXhI,EACAiI,EACAC,EACAlJ,GAGA+C,EACEF,EACE7B,EACAiI,EAJiBjI,EAAqBkI,EAMtCnF,OAAOoF,OAAOnJ,MAIpBoJ,QAAS,SAACtH,GAAD,OAAUiB,EChHE,SAACjB,GACtB,MAAO,CACLJ,KdAoB,WcCpBL,QAASS,GD6GiBsH,CAAQtH,QAGvBsF,EAhGE,SAAC5C,GAAW,IAAD,EACQG,mBAAS/D,KADjB,mBACnBR,EADmB,KACRqH,EADQ,OAEF9C,mBAAS,GAA1BtE,EAFmB,sBAIQsE,mBf4CHrE,MAASE,OAjEtB,SeiBQ,mBAInBgH,EAJmB,KAIR6B,EAJQ,OAKI1E,mBAC5BxE,EAAgBC,EAAWC,IANH,mBAKnBqH,EALmB,KAKV4B,EALU,KASpBJ,EAAoB1E,EAAMxE,SAASI,UACnCmJ,EAAkB/E,EAAMxE,SAASe,QAE/BiI,EAAyBxE,EAAzBwE,YAAaI,EAAY5E,EAAZ4E,QA+BrB,OA7BAI,qBAAU,WACRJ,Ef9BsB,SAAChJ,EAAWqJ,GAKpC,IAJA,IAAM3H,EAAO,GACP4H,EAAYpJ,IAAOF,GACnBuJ,EAAWrJ,IAAOoJ,GAAWnJ,IAAIkJ,EAAU,EAAG,QAChDG,EAAcF,EACXE,GAAeD,GAAU,CAC9B,IAAME,EAAS,CACb9J,KAAMO,IAAOsJ,GAAapJ,OAXZ,cAYd8G,cAAehH,IAAOsJ,GAAa7J,OACnCkH,aAAc3G,IAAOsJ,GAAapJ,OAAO,OACzCwG,MAAO1G,IAAOsJ,GAAapJ,OAAO,QAEpCsB,EAAK+B,KAAKgG,GACVD,EAActJ,IAAOsJ,GAAarJ,IAAI,EAAG,QAE3C,OAAOuB,EeeGgI,CAAW1J,EAAWC,IAC9BgJ,EfiB6B,SAACjJ,GAChC,OAAOE,IAAOF,GAAWI,OAAO,QelBjBuJ,CAAkB3J,IAC/BkJ,EAAWnJ,EAAgBC,EAAWC,IAElCD,EAAY8I,EACdF,EACEvI,EAAQyI,GAAoB,IAC5BA,EACAA,EACA1E,EAAMxE,SAASc,OAERH,EAAgBP,EAAWC,GAAiBkJ,GACrDP,EACEvI,EAAQ8I,EAAiB,GACzB9I,EAAQ8I,EAAiB,IACzBL,EACA1E,EAAMxE,SAASc,SAGlB,CACDsI,EACAC,EACAC,EACAN,EACA5I,EACAC,IAIA,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,yBAAKmG,UAAU,YACb,kBAAC,QAAD,MACG,YAAyC,IAAtCwD,EAAqC,EAArCA,YACIrC,EACJqC,EAFqC,EAAxBC,mBAEoBD,EAAYE,gBACzC,WACA,kBACN,OACE,kBAAC,GAAD,CACE1C,UAAWA,EACXpH,UAAWA,EACXqH,aAAcA,EACdC,QAASA,EACTC,cAAeA,YEhEhBwC,OAVf,WACE,OACE,yBAAK3D,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAU4D,OAAK,EAACC,KAAK,sBCETjE,QACW,cAA7BjE,OAAOmI,SAASC,UAEe,UAA7BpI,OAAOmI,SAASC,UAEhBpI,OAAOmI,SAASC,SAASC,MACvB,2DCGNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUrI,MAAOA,GACf,kBAAC,IAAD,CAAkB0H,YAbJ,CAClBY,OAAQ,IACRV,gBAAiB,IACjBW,OAAQ,IACRC,gBAAiB,KACjBC,QAAS,KACTC,aAAc,KACdC,YAAa,OAOP,kBAAC,GAAD,SAINC,SAASC,eAAe,SDsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnI,MAAK,SAAAoI,GACJA,EAAaC,gBAEdlH,OAAM,SAAAf,GACL6B,QAAQ7B,MAAMA,EAAMkI,a","file":"static/js/main.716c2db5.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst DATE_FORMAT = \"YYYY-MM-DD\";\nconst WEEK_FORMAT = \"dddd\";\nconst YEAR_FORMAT = \"YYYY\";\n\nexport const createDays = (startDate, numDays) => {\n  const days = [];\n  const firstDate = moment(startDate);\n  const lastDate = moment(firstDate).add(numDays - 1, \"days\");\n  let currentDate = firstDate;\n  while (currentDate <= lastDate) {\n    const newDay = {\n      date: moment(currentDate).format(DATE_FORMAT),\n      dayOfTheMonth: moment(currentDate).date(),\n      dayOfTheWeek: moment(currentDate).format(\"ddd\"),\n      month: moment(currentDate).format(\"MMM\"),\n    };\n    days.push(newDay);\n    currentDate = moment(currentDate).add(1, \"days\");\n  }\n  return days;\n};\n\nexport const buildHolidays = (data) => {\n  const fetchedHolidays = [];\n  Object.keys(data).forEach((key) => {\n    for (let day of data[key]) {\n      fetchedHolidays.push(Object.assign(day, { date: key }));\n    }\n  });\n  return fetchedHolidays;\n};\n\nexport const filterRepeated = (holidays) => {\n  const namesList = [];\n  return holidays.reduce((filtered, holiday) => {\n    if (!namesList.includes(holiday.name)) {\n      namesList.push(holiday.name);\n      filtered.push(holiday);\n    }\n    return filtered;\n  }, []);\n};\n\nexport const checkHoliday = (day, holidays) => {\n  const holidaysDates = holidays.map((holiday) => holiday.date);\n  return holidaysDates.includes(day.date);\n};\n\nexport const holidaysByDate = (date, holidays) => {\n  return holidays.filter((holiday) => holiday.date === date);\n};\n\nexport const retrieveStartYear = (startDate) => {\n  return moment(startDate).format(\"YYYY\");\n};\n\nexport const retrieveEndYear = (startDate, daysToDisplay) => {\n  return moment(startDate).add(daysToDisplay, \"days\").format(\"YYYY\");\n};\n\nexport const addDays = (startDate, daysToAdd) => {\n  return moment(startDate).add(daysToAdd, \"days\").format(DATE_FORMAT);\n};\n\nexport const retrieveEndDate = addDays;\n\nexport const today = () => moment().format(DATE_FORMAT);\nexport const currentYear = () => moment().format(YEAR_FORMAT);\n\nexport const dayOfTheWeekAsString = (dateToFormat) => {\n  return moment(dateToFormat).format(WEEK_FORMAT);\n};\n\nexport const dayOfTheWeekAsNumber = (dateToFormat) => {\n  return moment(dateToFormat).format(\"E\");\n};\n","import * as actionTypes from \"../store/actions/actionTypes\";\nimport { retrieveEndDate, today } from \"../../utils/days.utils\";\n\nconst INITIAL_STATE = {\n  dates: [],\n  startDate: today(),\n  endDate: retrieveEndDate(today()),\n};\n\nconst fetchHolidaysStart = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nconst fetchHolidaysSuccess = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n    dates: action.payload,\n  };\n};\n\nconst fetchHolidaysFailed = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n  };\n};\n\nconst setHolidaysStartDate = (state, action) => {\n  return {\n    ...state,\n    startDate: action.payload,\n  };\n};\n\nconst setHolidaysEndDate = (state, action) => {\n  return {\n    ...state,\n    endDate: action.payload,\n  };\n};\n\nconst holidaysReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_HOLIDAYS_START:\n      return fetchHolidaysStart(state, action);\n\n    case actionTypes.FETCH_HOLIDAYS_SUCCESS:\n      return fetchHolidaysSuccess(state, action);\n\n    case actionTypes.FETCH_HOLIDAYS_FAILED:\n      return fetchHolidaysFailed(state, action);\n\n    case actionTypes.SET_HOLIDAYS_START_DATE:\n      return setHolidaysStartDate(state, action);\n\n    case actionTypes.SET_HOLIDAYS_END_DATE:\n      return setHolidaysEndDate(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default holidaysReducer;\n","export const FETCH_HOLIDAYS_START = \"FETCH_HOLIDAYS_START\";\nexport const FETCH_HOLIDAYS_SUCCESS = \"FETCH_HOLIDAYS_SUCCESS\";\nexport const FETCH_HOLIDAYS_FAILED = \"FETCH_HOLIDAYS_FAILED\";\n\nexport const SET_DAYS = \"SET_DAYS\";\nexport const SET_HOLIDAYS_START_DATE = \"SET_HOLIDAYS_START_DATE\";\nexport const SET_HOLIDAYS_END_DATE = \"SET_HOLIDAYS_END_DATE\";\n","import * as actionTypes from \"../store/actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  dates: [],\n};\n\nconst daysReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SET_DAYS:\n      return {\n        ...state,\n        dates: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default daysReducer;\n","import { combineReducers } from \"redux\";\nimport holidaysReducer from \"./holidays/holidays.reducer\";\nimport daysReducer from \"./days/days.reducer\";\n\nconst rootReducer = combineReducers({\n  holidays: holidaysReducer,\n  days: daysReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"../root-reducer\";\n\nconst middlewares = [logger, thunk];\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import axios from \"axios\";\nimport * as config from \"./config\";\n\nconst instance = axios.create({\n  baseURL: config.API_URL,\n});\n\nexport default instance;\n","export const API_URL =\n  \"https://wozmx9dh26.execute-api.eu-west-1.amazonaws.com/api/\";\nexport const API_KEY = \"80a4bd496d156658585e1a0450ddc438\";\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../../axios-holidays\";\nimport * as config from \"../../../config\";\n\nimport { buildHolidays, filterRepeated } from \"../../../utils/days.utils\";\n\nconst fetchHolidaysStart = () => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_START,\n  };\n};\n\nconst fetchHolidaysSuccess = (fetchedHolidays) => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_SUCCESS,\n    payload: fetchedHolidays,\n  };\n};\n\nconst fetchHolidaysFailed = () => {\n  return {\n    type: actionTypes.FETCH_HOLIDAYS_FAILED,\n  };\n};\n\nconst setHolidaysStartDate = (startDate) => {\n  return {\n    type: actionTypes.SET_HOLIDAYS_START_DATE,\n    payload: startDate,\n  };\n};\n\nconst setHolidaysEndDate = (endDate) => {\n  return {\n    type: actionTypes.SET_HOLIDAYS_END_DATE,\n    payload: endDate,\n  };\n};\n\nexport const fetchHolidays = (startDate, endDate, insertBefore, holidays) => {\n  return (dispatch) => {\n    dispatch(fetchHolidaysStart());\n    const requestHeaders = {\n      apiKey: config.API_KEY,\n      startDate: startDate,\n      endDate: endDate,\n    };\n    axios\n      .post(\"holidays\", requestHeaders)\n      .then((res) => {\n        let fetchedHolidays = [];\n        if (!res.data.error) {\n          fetchedHolidays = filterRepeated(buildHolidays(res.data.holidays));\n        }\n        fetchedHolidays = insertBefore\n          ? [...fetchedHolidays, ...holidays]\n          : [...holidays, ...fetchedHolidays];\n        dispatch(fetchHolidaysSuccess(fetchedHolidays));\n        insertBefore\n          ? dispatch(setHolidaysStartDate(startDate))\n          : dispatch(setHolidaysEndDate(endDate));\n      })\n      .catch((error) => {\n        dispatch(fetchHolidaysFailed(error));\n      });\n  };\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport {\n  retrieveEndDate,\n  dayOfTheWeekAsString,\n  dayOfTheWeekAsNumber,\n} from \"../../utils/days.utils\";\n\nexport default function FirstDaySelector(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const currentDay = dayOfTheWeekAsString(props.firstDay);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleChange = (value) => {\n    handleClose();\n    const daysToAdd = value - dayOfTheWeekAsNumber(props.firstDay); // (0 ... 6) - currentDayOfTheWeek\n    console.log(daysToAdd);\n    if (Math.abs(daysToAdd) < 7) {\n      const newFirstDay = retrieveEndDate(props.firstDay, daysToAdd);\n      console.log(newFirstDay);\n      props.onFirstDayChanged(newFirstDay);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        First Day: {currentDay}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => handleChange(1)}>Monday</MenuItem>\n        <MenuItem onClick={() => handleChange(2)}>Tuesday</MenuItem>\n        <MenuItem onClick={() => handleChange(3)}>Wednesday</MenuItem>\n        <MenuItem onClick={() => handleChange(4)}>Thursday</MenuItem>\n        <MenuItem onClick={() => handleChange(5)}>Friday</MenuItem>\n        <MenuItem onClick={() => handleChange(6)}>Saturday</MenuItem>\n        <MenuItem onClick={() => handleChange(0)}>Sunday</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./holiday.styles.scss\";\n\nimport { Chip } from \"@material-ui/core\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nconst Holiday = ({ name, date, type }) => (\n  <div className=\"holiday\">\n    <div className=\"name\">{name}</div>\n    <Chip\n      variant=\"outlined\"\n      color=\"secondary\"\n      size=\"small\"\n      icon={<EventIcon />}\n      label={type}\n    />\n  </div>\n);\n\nexport default Holiday;\n","import React from \"react\";\nimport \"./day.styles.scss\";\nimport Holiday from \"../calendar-holiday/holiday.component\";\n\nconst Day = ({ date, day, month, dayOfTheWeek, isHoliday, holidays }) => {\n  return (\n    <div className=\"day\">\n      <div className=\"date-wrapper\">\n        <div className=\"date\">\n          <span className=\"number\">{day}</span>\n          <span className=\"month\">{month}</span>\n        </div>\n        <div className={isHoliday ? \"day-week holiday\" : \"day-week\"}>\n          {dayOfTheWeek}\n        </div>\n      </div>\n      <div className=\"holidays\">\n        {isHoliday\n          ? holidays.map((holiday) => (\n              <Holiday\n                key={holiday.name}\n                name={holiday.name}\n                type={holiday.type}\n              />\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Day;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./calendarWeek.styles.scss\";\nimport Day from \"../calendar-day/day.component\";\n\nimport { checkHoliday, holidaysByDate } from \"../../utils/days.utils\";\n\nconst CalendarWeek = ({ days, holidays }) => {\n  return holidays.dates ? (\n    <div className=\"week\">\n      {days.dates.map((day) => {\n        const isHoliday = checkHoliday(day, holidays.dates);\n        return (\n          <Day\n            key={day.date}\n            date={day.date}\n            day={day.dayOfTheMonth}\n            month={day.month}\n            dayOfTheWeek={day.dayOfTheWeek}\n            isHoliday={isHoliday}\n            holidays={\n              isHoliday ? holidaysByDate(day.date, holidays.dates) : null\n            }\n          />\n        );\n      })}\n    </div>\n  ) : (\n    <h1>Something went wrong!</h1>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    holidays: state.holidays,\n    days: state.days,\n  };\n};\n\nexport default connect(mapStateToProps)(CalendarWeek);\n","import React, { Fragment } from \"react\";\n\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport FirstDaySelector from \"../first-day-selector/firstDaySelector.component\";\nimport CalendarWeek from \"../calendar-week/calendarWeek.component\";\nimport { addDays } from \"../../utils/days.utils\";\n\nimport \"./mobileCalendar.styles.scss\";\n\nconst Calendar = ({\n  startYear,\n  startDate,\n  setStartDate,\n  endYear,\n  calendarClass,\n}) => {\n  return (\n    <Fragment>\n      <div className=\"calendar-header\">\n        <div>{startYear}</div>\n        <FirstDaySelector\n          firstDay={startDate}\n          onFirstDayChanged={(newFirstday) => setStartDate(newFirstday)}\n        />\n        {startYear !== endYear ? <div>{endYear}</div> : null}\n      </div>\n      <div className={calendarClass}>\n        <Tooltip title=\"Previous Week\">\n          <IconButton\n            classes={{\n              root: \"next-icon\",\n            }}\n            onClick={() => setStartDate(addDays(startDate, -7))}\n          >\n            <NavigateBeforeIcon />\n          </IconButton>\n        </Tooltip>\n        <CalendarWeek />\n        <Tooltip title=\"Next Week\">\n          <IconButton\n            classes={{\n              root: \"next-icon\",\n            }}\n            onClick={() => setStartDate(addDays(startDate, 7))}\n          >\n            <NavigateNextIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\n\nimport {\n  Typography,\n  IconButton,\n  Toolbar,\n  AppBar,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport EventIcon from \"@material-ui/icons/Event\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst CalendarAppBar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n        >\n          <EventIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          My Calendar\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default CalendarAppBar;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./homepage.styles.scss\";\nimport { Media } from \"react-breakpoints\";\n\nimport { fetchHolidays } from \"../../redux/store/actions/holidays\";\nimport { setDays } from \"../../redux/store/actions/days\";\n\nimport {\n  today,\n  createDays,\n  retrieveStartYear,\n  retrieveEndYear,\n  retrieveEndDate,\n  currentYear,\n  addDays,\n} from \"../../utils/days.utils\";\n\nimport Calendar from \"../../components/calendar/calendar.component\";\nimport CalendarAppBar from \"../../components/calendar-appbar/calendarAppbar.component\";\n\nconst HomePage = (props) => {\n  const [startDate, setStartDate] = useState(today());\n  const [daysToDisplay] = useState(7);\n\n  const [startYear, setStartYear] = useState(currentYear());\n  const [endYear, setEndYear] = useState(\n    retrieveEndYear(startDate, daysToDisplay)\n  );\n\n  const holidaysStartDate = props.holidays.startDate;\n  const holidaysEndDate = props.holidays.endDate;\n\n  const { getHolidays, setDays } = props;\n\n  useEffect(() => {\n    setDays(createDays(startDate, daysToDisplay));\n    setStartYear(retrieveStartYear(startDate));\n    setEndYear(retrieveEndYear(startDate, daysToDisplay));\n\n    if (startDate < holidaysStartDate) {\n      getHolidays(\n        addDays(holidaysStartDate, -28),\n        holidaysStartDate,\n        holidaysStartDate,\n        props.holidays.dates\n      );\n    } else if (retrieveEndDate(startDate, daysToDisplay) > holidaysEndDate) {\n      getHolidays(\n        addDays(holidaysEndDate, 1),\n        addDays(holidaysEndDate, 28),\n        holidaysStartDate,\n        props.holidays.dates\n      );\n    }\n  }, [\n    setDays,\n    setStartYear,\n    setEndYear,\n    getHolidays,\n    startDate,\n    daysToDisplay,\n  ]);\n\n  return (\n    <Fragment>\n      <CalendarAppBar />\n      <div className=\"homepage\">\n        <Media>\n          {({ breakpoints, currentBreakpoint }) => {\n            const calendarClass =\n              breakpoints[currentBreakpoint] > breakpoints.mobileLandscape\n                ? \"calendar\"\n                : \"mobile-calendar\";\n            return (\n              <Calendar\n                startYear={startYear}\n                startDate={startDate}\n                setStartDate={setStartDate}\n                endYear={endYear}\n                calendarClass={calendarClass}\n              />\n            );\n          }}\n        </Media>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    holidays: state.holidays,\n    days: state.days,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getHolidays: (\n    fetchHolidaysStart,\n    fetchHolidaysEnd,\n    holidaysStartDate,\n    holidays\n  ) => {\n    const insertBefore = fetchHolidaysStart < holidaysStartDate;\n    dispatch(\n      fetchHolidays(\n        fetchHolidaysStart,\n        fetchHolidaysEnd,\n        insertBefore,\n        Object.freeze(holidays)\n      )\n    );\n  },\n  setDays: (days) => dispatch(setDays(days)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const setDays = (days) => {\n  return {\n    type: actionTypes.SET_DAYS,\n    payload: days,\n  };\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HomePage exact path=\"/week-calendar\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport ReactBreakpoints from \"react-breakpoints\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst breakpoints = {\n  mobile: 320,\n  mobileLandscape: 480,\n  tablet: 768,\n  tabletLandscape: 1024,\n  desktop: 1200,\n  desktopLarge: 1500,\n  desktopWide: 1920,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactBreakpoints breakpoints={breakpoints}>\n        <App />\n      </ReactBreakpoints>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}